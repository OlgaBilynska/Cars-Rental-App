{"version":3,"file":"static/js/253.066b16c9.chunk.js","mappings":"wLAEO,MAAMA,E,QAAcC,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sD,+DCsBpC,MA8FA,EA9FqBC,KACnB,MAAMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,MAE3CG,EAAcA,KAClBJ,GAAcK,IAAeA,GAAU,EAQzC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,KACXD,EAAAA,EAAAA,KAACnB,EAAW,CAAAkB,SAAC,wBACbC,EAAAA,EAAAA,KAACE,EAAAA,GAAqB,CAAAH,SACnBZ,EAAagB,KACZC,IAAA,IAAC,GACCC,EAAE,KACFC,EAAI,KACJC,EAAI,MACJC,EAAK,KACLC,EAAI,IACJC,EAAG,YACHC,EAAW,gBACXC,EAAe,WACfC,EAAU,YACVC,EAAW,gBACXC,EAAe,YACfC,EAAW,cACXC,EAAa,QACbC,GACDd,EAAA,OACCP,EAAAA,EAAAA,MAACsB,EAAAA,GAAa,CAAApB,SAAA,EACZF,EAAAA,EAAAA,MAACuB,EAAAA,GAAoB,CAAArB,SAAA,EACnBC,EAAAA,EAAAA,KAACqB,EAAAA,GAAkB,CAAAtB,SAChBW,GACCV,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CAACC,IAAKb,EAAKc,IAAKb,KAE7BX,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKyB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,qBAK1B9B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAiB,CAAA7B,SAAA,EAChBF,EAAAA,EAAAA,MAACgC,EAAAA,GAAkB,CAAA9B,SAAA,EACjBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CACGQ,EAAK,KAACP,EAAAA,EAAAA,KAAC8B,EAAAA,GAAe,CAAA/B,SAAES,IAAyB,KAAEF,MAGtDN,EAAAA,EAAAA,KAAA,KAAAD,SAAIiB,QAGNnB,EAAAA,EAAAA,MAACkC,EAAAA,GAAiB,CAAAhC,SAAA,EAChBC,EAAAA,EAAAA,KAACgC,EAAAA,GAAc,CAAAjC,SACZmB,EAAQe,MAAM,KAAKC,OAAO,EAAG,MAEhClC,EAAAA,EAAAA,KAACgC,EAAAA,GAAc,CAAAjC,SACZmB,EAAQe,MAAM,KAAKC,OAAO,EAAG,MAEhClC,EAAAA,EAAAA,KAACgC,EAAAA,GAAc,CAAAjC,SAAEkB,QAEnBpB,EAAAA,EAAAA,MAACkC,EAAAA,GAAiB,CAAAhC,SAAA,EAChBC,EAAAA,EAAAA,KAACgC,EAAAA,GAAc,CAAAjC,SAAEU,KACjBT,EAAAA,EAAAA,KAACgC,EAAAA,GAAc,CAAAjC,SAAES,KACjBR,EAAAA,EAAAA,KAACgC,EAAAA,GAAc,CAAAjC,SAAEM,KACjBL,EAAAA,EAAAA,KAACmC,EAAAA,GAAkB,CAAApC,SAChBgB,EAAgB,eAMzBf,EAAAA,EAAAA,KAACoC,EAAAA,GAAa,CAACC,QAAuB,KAnEhD3C,EAmEqEW,QAlErEV,KAkE0EI,SAAC,eAGhET,GAAae,IAAOZ,IACnBO,EAAAA,EAAAA,KAACsC,EAAAA,EAAY,CAACD,QAAS1C,EAAYI,UACjCC,EAAAA,EAAAA,KAACuC,EAAAA,EAAY,CAAClC,GAAIA,SA9CJmC,EAAAA,EAAAA,MAiDJ,QAIrB,C","sources":["pages/FavoritePage/FavoritePage.styled.js","pages/FavoritePage/FavoritePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const TitleStyled = styled.h1`\n  font-size: 46px;\n  margin-bottom: 50px;\n`;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport Navigation from \"../../components/Navigation\";\nimport { TitleStyled } from \"./FavoritePage.styled\";\nimport { selectFavoriteCars } from \"../../redux/selectors\";\nimport ModalCarItem from \"../../components/ModalCarItem\";\nimport ModalContent from \"../../components/ModalContent/ModalContent\";\nimport sprite from \"../../assets/sprite.svg\";\nimport {\n  CarItemsWrapperStyled,\n  CarItemStyled,\n  InfoWrapperStyled,\n  LinkBtnStyled,\n  TitleWrapperStyled,\n  ImgCarStyled,\n  TextWrapperStyled,\n  InfoItemStyled,\n  InfoItemLastStyled,\n  ContentWrapperStyled,\n  AccentColStyled,\n  ImageWrapperStyled,\n} from \"../CatalogPage/CatalogPage.styled\";\n\nconst FavoritePage = () => {\n  const favoriteList = useSelector(selectFavoriteCars);\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [clickedCarId, setClickedCarId] = useState(null);\n\n  const toggleModal = () => {\n    setModalOpen((prevState) => !prevState);\n  };\n\n  const onCarItemClick = (carID) => {\n    setClickedCarId(carID);\n    toggleModal();\n  };\n\n  return (\n    <>\n      <Navigation />\n      <TitleStyled>Your Favorite Cars</TitleStyled>\n      <CarItemsWrapperStyled>\n        {favoriteList.map(\n          ({\n            id,\n            year,\n            make,\n            model,\n            type,\n            img,\n            description,\n            fuelConsumption,\n            engineSize,\n            accessories,\n            functionalities,\n            rentalPrice,\n            rentalCompany,\n            address,\n          }) => (\n            <CarItemStyled key={nanoid()}>\n              <ContentWrapperStyled>\n                <ImageWrapperStyled>\n                  {img ? (\n                    <ImgCarStyled src={img} alt={description} />\n                  ) : (\n                    <svg>\n                      <use href={`${sprite}#icon-auto`} />\n                    </svg>\n                  )}\n                </ImageWrapperStyled>\n\n                <TextWrapperStyled>\n                  <TitleWrapperStyled>\n                    <p>\n                      {make} <AccentColStyled>{model}</AccentColStyled>, {year}\n                    </p>\n\n                    <p>{rentalPrice}</p>\n                  </TitleWrapperStyled>\n\n                  <InfoWrapperStyled>\n                    <InfoItemStyled>\n                      {address.split(\",\").splice(1, 1)}\n                    </InfoItemStyled>\n                    <InfoItemStyled>\n                      {address.split(\",\").splice(2, 1)}\n                    </InfoItemStyled>\n                    <InfoItemStyled>{rentalCompany}</InfoItemStyled>\n                  </InfoWrapperStyled>\n                  <InfoWrapperStyled>\n                    <InfoItemStyled>{type}</InfoItemStyled>\n                    <InfoItemStyled>{model}</InfoItemStyled>\n                    <InfoItemStyled>{id}</InfoItemStyled>\n                    <InfoItemLastStyled>\n                      {functionalities[0]}\n                    </InfoItemLastStyled>\n                  </InfoWrapperStyled>\n                </TextWrapperStyled>\n              </ContentWrapperStyled>\n\n              <LinkBtnStyled onClick={(toggleModal, () => onCarItemClick(id))}>\n                Learn More\n              </LinkBtnStyled>\n              {modalOpen && id === clickedCarId && (\n                <ModalCarItem onClick={toggleModal}>\n                  <ModalContent id={id} />\n                </ModalCarItem>\n              )}\n            </CarItemStyled>\n          )\n        )}\n      </CarItemsWrapperStyled>\n    </>\n  );\n};\n\nexport default FavoritePage;\n"],"names":["TitleStyled","styled","h1","_templateObject","_taggedTemplateLiteral","FavoritePage","favoriteList","useSelector","selectFavoriteCars","modalOpen","setModalOpen","useState","clickedCarId","setClickedCarId","toggleModal","prevState","_jsxs","_Fragment","children","_jsx","Navigation","CarItemsWrapperStyled","map","_ref","id","year","make","model","type","img","description","fuelConsumption","engineSize","accessories","functionalities","rentalPrice","rentalCompany","address","CarItemStyled","ContentWrapperStyled","ImageWrapperStyled","ImgCarStyled","src","alt","href","concat","sprite","TextWrapperStyled","TitleWrapperStyled","AccentColStyled","InfoWrapperStyled","InfoItemStyled","split","splice","InfoItemLastStyled","LinkBtnStyled","onClick","ModalCarItem","ModalContent","nanoid"],"sourceRoot":""}